<?xml version="1.0"?>
<doc>
	<assembly>
		<name>Palaso.Media</name>
	</assembly>
	<members>
		<member name="F:Palaso.Media.SoundFieldControl.components">
			<summary>
			Required designer variable.
			</summary>
		</member>
		<member name="M:Palaso.Media.SoundFieldControl.Dispose(System.Boolean)">
			<summary>
			Clean up any resources being used.
			</summary>
			<param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
		</member>
		<member name="M:Palaso.Media.SoundFieldControl.InitializeComponent">
			<summary>
			Required method for Designer support - do not modify
			the contents of this method with the code editor.
			</summary>
		</member>
		<member name="T:Palaso.Media.MediaInfo">
			<summary>
			This class uses ffmpeg to gather information about media streams
			</summary>
		</member>
		<member name="F:Palaso.Media.MediaInfo.RawData">
			<summary>
			The actual ffmpeg output
			</summary>
		</member>
		<member name="M:Palaso.Media.MediaInfo.GetDuration(System.String)">
			<summary>
			used by both audio and video, so it lives up here
			</summary>
		</member>
		<member name="P:Palaso.Media.MediaInfo.HaveNecessaryComponents">
			<summary>
			 Returns false if it can't find ffmpeg
			</summary>
		</member>
		<member name="F:Palaso.Media.ShortSoundFieldControl.components">
			<summary>
			Required designer variable.
			</summary>
		</member>
		<member name="M:Palaso.Media.ShortSoundFieldControl.Dispose(System.Boolean)">
			<summary>
			Clean up any resources being used.
			</summary>
			<param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
		</member>
		<member name="M:Palaso.Media.ShortSoundFieldControl.InitializeComponent">
			<summary>
			Required method for Designer support - do not modify
			the contents of this method with the code editor.
			</summary>
		</member>
		<member name="T:Palaso.Media.Properties.Resources">
			<summary>
			  A strongly-typed resource class, for looking up localized strings, etc.
			</summary>
		</member>
		<member name="P:Palaso.Media.Properties.Resources.ResourceManager">
			<summary>
			  Returns the cached ResourceManager instance used by this class.
			</summary>
		</member>
		<member name="P:Palaso.Media.Properties.Resources.Culture">
			<summary>
			  Overrides the current thread's CurrentUICulture property for all
			  resource lookups using this strongly typed resource class.
			</summary>
		</member>
		<member name="T:Palaso.Media.FFmpegRunner">
			<summary>
			 FFmpeg is an open source media processing commandline library
			</summary>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.LocateAndRememberFFmpeg">
			<summary>
			Find the path to ffmpeg, and remember it (some apps (like SayMore) call ffmpeg a lot)
			</summary>
			<returns></returns>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.LocateFFmpeg">
			<summary>
			ffmpeg is more of a "compile it yourself" thing, and yet
			SIL doesn't necessarily want to be redistributing something
			which may violate software patents (e.g. mp3) in certain countries, so
			we ask users to get it themselves.
			See: http://www.ffmpeg.org/legal.html
			This tries to find where they put it.
			</summary>
			<returns>the path, if found, else null</returns>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.ExtractMp3Audio(System.String,System.String,Palaso.CommandLineProcessing.IProgress)">
			<summary>
			Extracts the audio from a video. Note, it will fail if the file exists, so the client
			is resonsible for verifying with the user and deleting the file before calling this.
			</summary>
			<param name="inputPath"></param>
			<param name="outputPath"></param>
			<param name="progress"></param>
			<returns>log of the run</returns>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.MakeLowQualityCompressedAudio(System.String,System.String,Palaso.CommandLineProcessing.IProgress)">
			<summary>
			Converts to low-quality, mono mp3
			</summary>
			<returns>log of the run</returns>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.MakeLowQualitySmallVideo(System.String,System.String,System.Int32,Palaso.CommandLineProcessing.IProgress)">
			<summary>
			Converts to low-quality, small video
			</summary>
			<param name="maxSeconds">0 if you don't want to truncate at all</param>
			<returns>log of the run</returns>
		</member>
		<member name="M:Palaso.Media.FFmpegRunner.MakeLowQualitySmallPicture(System.String,System.String,Palaso.CommandLineProcessing.IProgress)">
			<summary>
			Converts to low-quality, small picture
			</summary>
			<returns>log of the run</returns>
		</member>
		<member name="P:Palaso.Media.FFmpegRunner.HaveNecessaryComponents">
			<summary>
			 Returns false if it can't find ffmpeg
			</summary>
		</member>
		<member name="P:Palaso.Media.FFmpegRunner.HaveValidFFMpegOnPath">
			<summary>
			 Returns false if it can't find ffmpeg
			</summary>
		</member>
		<member name="M:Palaso.Media.AudioIrrKlangSession.MakeTempCopyIfNeededBecauseOfUnicode(System.String,System.String@)">
			<summary>
			this version of irrklang can't play if there's non-latin in there
			see http://www.ambiera.com/forum.php?t=601
			</summary>
			<returns>true if you need to use the provided temp file</returns>
		</member>
	</members>
</doc>
